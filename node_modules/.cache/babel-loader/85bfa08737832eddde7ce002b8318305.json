{"ast":null,"code":"var _jsxFileName = \"/Users/houriehtaheri/Desktop/React-Ehandel-Frontend-2/src/App.js\";\nimport React from 'react';\nimport Products from './Components/Products';\nimport data from './data.json';\nimport Filter from './Components/Filter';\nimport Cart from './Components/cart/Cart';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport Home from './Components/home/Home';\nimport Header from './Components/header/Header';\nimport Login from './Components/Login';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.createOrder = order => {\n      alert('Need to save for order' + order.name);\n    };\n\n    this.removeFromCart = product => {\n      const cartItems = this.state.cartItems.slice();\n      this.setState({\n        cartItems: cartItems.filter(x => x._id !== product._id)\n      });\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems.filter(x => x._id !== product._id)));\n    };\n\n    this.addToCart = product => {\n      const cartItems = this.state.cartItems.slice(); //Is already in cart\n\n      let alreadyInCart = false; //Check if item is alreay in the cart\n\n      cartItems.forEach(item => {\n        if (item._id === product._id) {\n          item.count++;\n          alreadyInCart = true;\n        }\n      });\n\n      if (!alreadyInCart) {\n        cartItems.push({ ...product,\n          count: 1\n        });\n      }\n\n      this.setState({\n        cartItems\n      }); //Update local storage with new cart item list\n\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n    };\n\n    this.state = {\n      products: data.products,\n      cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n      size: 0,\n      sort: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Provider, {\n        store: store,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          cartItems: this.state.cartItems,\n          removeFromCart: this.removeFromCart,\n          createOrder: this.createOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {\n              products: this.state.products,\n              addToCart: this.addToCart,\n              size: this.state.size,\n              sort: this.state.sort,\n              filterProducts: this.filterProducts,\n              sortProducts: this.sortProducts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/houriehtaheri/Desktop/React-Ehandel-Frontend-2/src/App.js"],"names":["React","Products","data","Filter","Cart","store","Provider","Home","Header","Login","BrowserRouter","Router","Route","Routes","App","Component","constructor","createOrder","order","alert","name","removeFromCart","product","cartItems","state","slice","setState","filter","x","_id","localStorage","setItem","JSON","stringify","addToCart","alreadyInCart","forEach","item","count","push","products","getItem","parse","size","sort","render","filterProducts","sortProducts"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;;;AAEA,MAAMC,GAAN,SAAkBd,KAAK,CAACe,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAahBC,WAbgB,GAaDC,KAAD,IAAW;AACrBC,MAAAA,KAAK,CAAC,2BAA2BD,KAAK,CAACE,IAAlC,CAAL;AACD,KAfa;;AAAA,SAgBdC,cAhBc,GAgBIC,OAAD,IAAa;AAC5B,YAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAAX,CAAqBE,KAArB,EAAlB;AAEA,WAAKC,QAAL,CAAc;AACZH,QAAAA,SAAS,EAAEA,SAAS,CAACI,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUP,OAAO,CAACO,GAA1C;AADC,OAAd;AAIAC,MAAAA,YAAY,CAACC,OAAb,CACE,WADF,EAEEC,IAAI,CAACC,SAAL,CAAeV,SAAS,CAACI,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUP,OAAO,CAACO,GAA1C,CAAf,CAFF;AAID,KA3Ba;;AAAA,SA4BdK,SA5Bc,GA4BDZ,OAAD,IAAa;AACvB,YAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAAX,CAAqBE,KAArB,EAAlB,CADuB,CAGvB;;AACA,UAAIU,aAAa,GAAG,KAApB,CAJuB,CAMvB;;AACAZ,MAAAA,SAAS,CAACa,OAAV,CAAmBC,IAAD,IAAU;AAC1B,YAAIA,IAAI,CAACR,GAAL,KAAaP,OAAO,CAACO,GAAzB,EAA8B;AAC5BQ,UAAAA,IAAI,CAACC,KAAL;AACAH,UAAAA,aAAa,GAAG,IAAhB;AACD;AACF,OALD;;AAOA,UAAI,CAACA,aAAL,EAAoB;AAClBZ,QAAAA,SAAS,CAACgB,IAAV,CAAe,EAAE,GAAGjB,OAAL;AAAcgB,UAAAA,KAAK,EAAE;AAArB,SAAf;AACD;;AAED,WAAKZ,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd,EAlBuB,CAoBvB;;AACAO,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeV,SAAf,CAAlC;AACD,KAlDa;;AAEZ,SAAKC,KAAL,GAAa;AACXgB,MAAAA,QAAQ,EAAEtC,IAAI,CAACsC,QADJ;AAGVjB,MAAAA,SAAS,EAAEO,YAAY,CAACW,OAAb,CAAqB,WAArB,IACRT,IAAI,CAACU,KAAL,CAAWZ,YAAY,CAACW,OAAb,CAAqB,WAArB,CAAX,CADQ,GAER,EALO;AAMXE,MAAAA,IAAI,EAAE,CANK;AAOXC,MAAAA,IAAI,EAAE;AAPK,KAAb;AAUD;;AAwCDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAExC,KAAjB;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,SAAS,EAAE,KAAKmB,KAAL,CAAWD,SADxB;AAEE,UAAA,cAAc,EAAE,KAAKF,cAFvB;AAGE,UAAA,WAAW,EAAE,KAAKJ;AAHpB;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,MAAD;AAAA,iCAIE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,GADP;AAEE,YAAA,OAAO,eAAE,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAE,KAAKO,KAAL,CAAWgB,QAA3B;AAAqC,cAAA,SAAS,EAAE,KAAKN,SAArD;AACP,cAAA,IAAI,EAAE,KAAKV,KAAL,CAAWmB,IADV;AAEP,cAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWoB,IAFV;AAGP,cAAA,cAAc,EAAE,KAAKE,cAHd;AAIP,cAAA,YAAY,EAAE,KAAKC;AAJZ;AAAA;AAAA;AAAA;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AAhF+B;;AAmFlC,eAAejC,GAAf","sourcesContent":["\nimport React from 'react';\nimport Products from './Components/Products';\nimport data from './data.json';\nimport Filter from './Components/Filter';\nimport Cart from './Components/cart/Cart';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport Home from './Components/home/Home';\nimport Header from './Components/header/Header';\nimport Login from './Components/Login';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      products: data.products\n      \n     , cartItems: localStorage.getItem('cartItems')\n        ? JSON.parse(localStorage.getItem('cartItems'))\n        : [],\n      size: 0,\n      sort: null,\n\n    };\n  }\ncreateOrder = (order) => {\n    alert('Need to save for order' + order.name);\n  };\n  removeFromCart = (product) => {\n    const cartItems = this.state.cartItems.slice();\n\n    this.setState({\n      cartItems: cartItems.filter((x) => x._id !== product._id),\n    });\n\n    localStorage.setItem(\n      \"cartItems\",\n      JSON.stringify(cartItems.filter((x) => x._id !== product._id))\n    );\n  };\n  addToCart = (product) => {\n    const cartItems = this.state.cartItems.slice();\n\n    //Is already in cart\n    let alreadyInCart = false;\n\n    //Check if item is alreay in the cart\n    cartItems.forEach((item) => {\n      if (item._id === product._id) {\n        item.count++;\n        alreadyInCart = true;\n      }\n    });\n\n    if (!alreadyInCart) {\n      cartItems.push({ ...product, count: 1 });\n    }\n\n    this.setState({ cartItems });\n\n    //Update local storage with new cart item list\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  };\n\n  render() {\n    return (\n      <Router>\n        <Provider store={store}>\n          <Header\n            cartItems={this.state.cartItems}\n            removeFromCart={this.removeFromCart}\n            createOrder={this.createOrder}\n          />\n          <Routes>\n            {/*Route for login page /}\n            <Route path='/login' element={<Login/>}/>\n            {/Route for home page */}\n            <Route\n              path=\"/\"\n              element={<Home products={this.state.products} addToCart={this.addToCart}\n                size={this.state.size}\n                sort={this.state.sort}\n                filterProducts={this.filterProducts}\n                sortProducts={this.sortProducts}\n              />}\n            />\n\n          </Routes>\n        </Provider>\n      </Router>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}